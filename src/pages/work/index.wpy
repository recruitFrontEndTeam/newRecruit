<style scoped lang="less" rel="stylesheet/less">
    @import "../../styles/common.less";
    .m-workIndex{
        .m-nav{
            width: 100%;
            .flex-row(space-around);
            height: 60rpx;
            padding: 10rpx 0;

        }
        .m-back{
            height: 20rpx;
            background-color: #f9f9f9;
            width: 100%;
        }
        .m-cover{
            position: fixed;
            overflow: hidden;
            top: 80rpx;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1000;
            background-color: rgba(0,0,0,0.5);
            .m-modal{
                position: absolute;
                top: 0;
                width: 100%;
                background-color: #fff;
                border-top: 1px solid #E6E6E6;
                .m-btn-box{
                    .flex-row(flex-start);
                    flex-wrap: wrap;
                    padding: 20rpx 34rpx;
                }
            }
        }
    }

</style>

<template>
    <view class="m-workIndex">
        <view class="m-nav">
            <repeat for="{{nav_list}}" key="index" index="index" item="item">
                <nav :list.sync="item" :index.sync="index" @navTap.user="navTap"></nav>
            </repeat>
        </view>
        <view class="m-back"></view>
        <view class="m-work-content">
            <repeat for="{{work_list}}" key="index" index="index" item="item">
                <info :list.sync="item" @infoTap.user="detailTap" ></info>
            </repeat>
        </view>

        <view class="m-cover" wx:if="{{nav_list[0].up}}" @tap="coverTap(0)">
            <view class="m-modal" >
                <view class="m-btn-box">
                    <repeat for="{{data_list.area_data}}" key="index" index="index" item="item" >
                        <btn :info.sync="item" :select="select_list.area_data" :index.sync="index" @btnTap.user="btnTap" ></btn>
                    </repeat>
                </view>
            </view>
        </view>
        <view class="m-cover" wx:if="{{nav_list[1].up}}" @tap="coverTap(1)">
            <view class="m-modal" >
                <view class="m-btn-box">
                    <repeat for="{{data_list.job_data}}" key="index" index="index" item="item" >
                        <btn :info.sync="item" :select="select_list.job_data" :index.sync="index" @btnTap.user="btnTap" ></btn>
                    </repeat>
                </view>
            </view>
        </view>
        <view class="m-cover" wx:if="{{nav_list[2].up}}" @tap="coverTap(2)">
            <view class="m-modal" >
                <view class="m-btn-box">
                    <repeat for="{{data_list.sort_data}}" key="index" index="index" item="item" >
                        <btn :info.sync="item" :select="select_list.sort_data" :index.sync="index" @btnTap.user="btnTap" ></btn>
                    </repeat>
                </view>
            </view>
        </view>
        <view >
            <repeat for="{{all_list}}" key="index" index="index" item="item" >
                <info :list.sync="item" @infoTap.user="detailTap" ></info>
            </repeat>
        </view>

    </view>
</template>
<script >
    import wepy from 'wepy';
    import tip from '../../utils/tip';
    import api from '../../api/api';
    import nav from '../../components/common/navigator';
    import info from '../../components/common/info';
    import btn from '../../components/common/button';
    export default class workIndex extends wepy.page{
        config = {
            navigationBarTitleText: '工作',
            navigationBarBackgroundColor: '#fff',
            navigationBarTextStyle: 'black',
            enablePullDownRefresh:true
        }
        components = {
            nav: nav,
            info:info,
            btn:btn
        }
        data = {
            nav_list:[
                {
                    name:'地区',
                    up:false,
                    data:'area_data'
                },
                {
                    name:'职位',
                    up:false,
                    data:'job_data'
                },
                {
                    name:'排序',
                    up:false,
                    data:'sort_data'
                }
            ],
            data_list:{
                area_data:[],
                job_data:[],
                sort_data:[{
                    sort_way:1,
                    name:'最新排序'
                },{
                    sort_way:2,
                    name:'工资最高'
                },{
                    sort_way:3,
                    name:'奖励金最高'
                }
                ]
            },
            work_list:[],
            select_list:{
                area_data:{},
                job_data:{},
                sort_data:{}
            },
            page_info:{cur_page:0, page_size: 5, total_items: 2, total_pages: 1},
            all_list:[]
        }
        async getWorkList(sess_key) {
            let that = this;
            tip.loading();
            let res = await api.workList({method:'POST',query:{
                sess_key: sess_key,
                is_rec:2,
                areano:that.select_list.area_data.areano || '',
                job_type:that.select_list.job_data.id || '',
                sort_way:that.select_list.sort_data.sort_way || '',
                page:Number(that.page_info.cur_page) +1 || 1,
                page_size:that.page_info.page_size
            }});
            if(res.data.error_code == 0 ){
                if(res.data.bizobj.data == null){
                    that.all_list = [];
                    that.page_info = {cur_page:0, page_size: 5, total_items: 2, total_pages: 1};
                }else{
                    that.all_list =that.all_list.concat(res.data.bizobj.data) ;
                    that.height = (that.all_list.length + 1) * 160;
                    that.page_info = res.data.bizobj.page_info;
                }
                that.$apply();
                tip.loaded();
            }else{
                tip.error(res.data.error_msg);
            }
        }
        async cityList(sess_key) {
            let that = this;
            tip.loading();
            let res = await api.cityList({method:'POST',query:{
                    sess_key: sess_key
                }});
            if(res.data.error_code == 0 ){
                that.data_list.area_data =res.data.bizobj.data.recruit_citys;
                that.$apply();
                tip.loaded();
            }else{
                tip.error(res.data.error_msg);
            }
        }
        async workTypeList(sess_key) {
            let that = this;
            tip.loading();
            let res = await api.workTypeList({method:'POST',query:{
                    sess_key: sess_key
                }});
            if(res.data.error_code == 0 ){
                that.data_list.job_data =res.data.bizobj.data;
                that.$apply();
                tip.loaded();
            }else{
                tip.error(res.data.error_msg);
            }
        }
        onLoad(){
            var _this = this;
            wx.getStorage({
                key: 'sess_key',
                success: function(res){
                    _this.getWorkList(res.data);
                    _this.cityList(res.data);
                    _this.workTypeList(res.data);
                }
            });
        }
        onPullDownRefresh(){
            wx.stopPullDownRefresh();
        }
        onReachBottom(){
            var _this = this;
            if(_this.page_info.cur_page == _this.page_info.total_pages){
                wx.showToast({ //如果全部加载完成了也弹一个框
                    title: '我也是有底线的',
                    icon: 'success',
                    duration: 300
                });
            }else{
                wx.getStorage({
                    key: 'sess_key',
                    success: function(res){
                        _this.getWorkList(res.data);
                    }
                });
            }
        }
        methods = {
            navTap(v){
                for(var i = 0;i<this.nav_list.length;i++){
                    this.nav_list[i].up = false;
                }
                this.nav_list[v].up = !this.nav_list[v].up;
                this.$apply();
            },
            btnTap(v){
                if(v.areano){
                    this.select_list.area_data = v;
                }else if(v.id){
                    this.select_list.job_data = v;
                }else{
                    this.select_list.sort_data = v;
                }
                var _this = this;
                wx.getStorage({
                    key: 'sess_key',
                    success: function(res){
                        _this.getWorkList(res.data);
                    }
                });
                this.$apply();
            },
            detailTap(v){
                wx.getStorage({
                    key: 'sess_key',
                    success: function(res){
                        wx.navigateTo({
                            url: '/pages/work/workDetails?secc_key=' + res.data + '&id=' + v.id
                        })
                    }
                });

            },
            coverTap(v){
                this.nav_list[v].up = false
            }
        }

    }
</script>
