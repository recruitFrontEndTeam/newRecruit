<style scoped lang="less" rel="stylesheet/less">
  @import "../../styles/common.less";
  .container{
  height: 100%;
  box-sizing: border-box;
 }
  .m-top{
    height: 100%;
  }
    .m-section {
      margin: 80rpx 40rpx;
      display: flex;
      align-items: center;
      padding: 20rpx 30rpx;
      border-bottom: 1px solid #dbdbdb;
      background: #fff;
      width: 550rpx;
      .m-icon {
        width: 50rpx;
        height: 50rpx;
        padding-right: 30rpx;
      }
      .m-phone {
        font-size: 30rpx;
      }
      .m-code {
        font-size: 30rpx;
      }
    }
    .m-btn_confirm {
      margin-top: 64rpx;
      padding: 0 24rpx;
      border-radius: 100px;
    }
      .m-button {
        background-color: @common-color;
        color: #ffffff;
      }
    .m-btn {
      border: 1px solid @common-color;
      width: 250rpx;
      height: 100rpx;
      font-size: 35rpx;
      margin: 0 35rpx 80rpx;
      display: inline-block;
      color: @common-color;
      border-radius:25rpx;
    }
</style>
<template>
    <button open-type="getUserInfo" bindgetuserinfo="onGotUserInfo"> 登录</button>
</template>
<script >
  import wepy from 'wepy';
  import api from '../../api/api'
  import tip from '../../utils/tip'
  export default class Login extends wepy.page{
    config = {
      navigationBarTitleText: '登录'
    }
    data = {

    }
      async getLogin(params){
          let that = this;
          console.log(params)
          let res = await api.login(params)
          if(res.data.error_code == 0){
              wx.setStorage({
                  'key':'sess_key',
                  'data':res.data.bizobj.data.sess_key
              });
              // wx.getUserInfo({
              //     success:function(res){
              //         that.getSess(res.data.bizobj.data.sess_key,res.encryptedData,res.iv);
              //         if(_res.data.error_code == 0){
              //             // wx.setStorage({
              //             //     'key':'sess_key',
              //             //     'data':_res.data.bizobj.data.sess_key
              //             // })
              //         }else{
              //         }
              //     },
              //     fail:function (res) {
              //         wx.showModal({
              //             title: '警告',
              //             cancelText: '不授权',
              //             confirmText: '授权',
              //             confirmColor: '#37C31A',
              //             content: '若不授权微信登录，则无法使用该程序；点击重新获取授权，则可重新使用；' +
              //             '若点击不授权，将无法使用便捷服务。',
              //             success: function (res) {
              //                 if (res.confirm) {
              //                     console.log('用户点击确定')
              //                     wx.openSetting({
              //                         success: (res) => {
              //                             if (res.authSetting['scope.userInfo']) {
              //                                 wx.login({
              //                                     success:function(resLogin){
              //                                         var code = resLogin.code;
              //                                         that.getLogin({method:'POST',query:{code:code}});
              //                                     }
              //                                 });
              //                             } else {
              //                                 console.info("再次不允许");
              //                                 wx.redirectTo({
              //                                     url: 'home',
              //                                 })
              //                             }
              //                         }
              //                     });
              //                 } else if (res.cancel) {
              //                     console.log('弹出框用户点击取消')
              //                     wx.redirectTo({
              //                         url: 'home',
              //                     })
              //
              //                 }
              //             }
              //         })
              //     }
              // })
          }else{
              tip.error(res.data.msg);
              wx.switchTab({
                  url: '/pages/index/index'
              });
          }
          }
      async getSess(sess_key,encryptedData,iv){
          let that = this;
          let res = await api.getUserInfo({method:'POST',query:{
                  sess_key: sess_key,
                  encrypteData:encryptedData,
                  iv:iv
              }})
          if(res.data.error_code == 0){
              wx.switchTab({
                  url:'/pages/index/index'
              });
          }else{
              tip.error(res.data.message)
          }
      }
      onLoad(){
      }
    methods = {
        onGotUserInfo: function (e) {
            var that = this;
            wx.getSetting({
                success:function(res) {
                    if (!res.authSetting['scope.userInfo']) {
                        wx.authorize({
                            scope: 'scope.userInfo',
                            success:function (res_info){
                                console.log(res_info)
                                wx.login({
                                    success:function(resLogin){
                                        var code = resLogin.code;
                                        that.getLogin({method:'POST',query:{code:code}});
                                    }
                                });
                            },fail:function (res_info) {
                                console.log(res_info)
                            }
                        })
                    }else{
                        console.log(res,'2')
                        wx.login({
                            success:function(resLogin){
                                var code = resLogin.code;
                                that.getLogin({method:'POST',query:{code:code}});
                            }
                        });
                    }
                },
                fail:function (res) {
                    console.log(res)
                }
            });
        },
      }
  }
</script>
