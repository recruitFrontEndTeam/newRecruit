<style scoped lang="less" rel="stylesheet/less">
    @import "../../../styles/common.less";
    .profile-container{
        background: @score-grey;
        height: 100%;
        width: 100%;
        padding-top: 20rpx;
        .form-view{
            .main{
                padding-left: 40rpx;
                background: #fff;
            }
            .form-item{
                .flex-row(flex-start);
                height: 100rpx;
                border-bottom: 1rpx solid #e6e6e6;
                .section__title{
                    width: 140rpx;
                    font-size: 28rpx;
                    color: #5d677d;
                    margin-right: 10rpx;
                    text-align: right;
                }
                .sex-text{
                    color: #bebebe;
                    font-size: 24rpx;
                    margin-right: 15rpx;
                }
                radio {  
                    transform:scale(0.6);  
                }
                .picker{
                    width: 250rpx;
                    height: 100rpx;
                    line-height: 100rpx;
                    font-size: 28rpx;
                }
                input.code-input{
                    width: 350rpx;
                }
                &.message-view{
                    .get-code-btn{
                        color: #4C80F5;
                        font-size: 24rpx;
                        cursor: pointer;
                        border-left: 1rpx solid @score-grey;
                        padding-left: 10rpx;
                        width: 150rpx;
                    }
                }
            }
            .btn-area{
                margin-top: 120rpx;
                .confirm-btn{
                    width: 440rpx;
                    border: 0;
                    height: 80rpx;
                    line-height: 80rpx;
                    background: #4C80F5;
                    border-radius: 40rpx;
                    font-size: 28rpx;
                    color: #fff;
                }
            }
        }       
    }
</style>

<template>
    <view class="profile-container">
        <view class="form-view">
            <form bindsubmit="formSubmit" bindreset="formReset">
                <view class="main">
                    <view class="form-item name-view">
                        <view class="section__title">姓名</view>
                        <input name="name" placeholder="请输入姓名" value="{{userData.username}}" placeholder-style="color: #bebebe;font-size: 24rpx;"/>
                    </view>
                    <view class="form-item sex-view">
                        <view class="section__title">性别</view>
                        <radio-group name="gender">
                            <label class="sex-text"><radio value="2" checked="{{userData.gender==2?true:false}}"/>男</label>
                            <label class="sex-text"><radio value="1" checked="{{userData.gender==1?true:false}}"/>女</label>
                        </radio-group>
                    </view>
                    <view class="form-item birth-view">
                        <view class="section__title">出生年月</view>
                        <picker mode="date" start="2015-09-01" end="2017-09-01" bindchange="bindDateChange">
                            <view class="picker">
                                {{date}}
                            </view>
                        </picker>
                    </view>
                    <view class="form-item tel-view">
                        <view class="section__title">手机号</view>
                        <input name="mobile" @blur="getTel" placeholder="请输入手机号" value="{{userData.mobile}}" placeholder-style="color: #bebebe;font-size: 24rpx;"/>
                    </view>
                    <view class="form-item message-view">
                        <view class="section__title">短信验证码</view>
                        <input class="code-input" name="sms_code" placeholder="请输入验证码" placeholder-style="color: #bebebe;font-size: 24rpx;"/>
                        <view class="get-code-btn" @tap="getCode">{{html}}</view>
                    </view>
                </view>
                <view class="btn-area">
                    <button class="confirm-btn" formType="submit">确认</button>
                </view>
            </form>
        </View>
    </view>
</template>
<script >
    import wepy from 'wepy';
    import tip from '../../../utils/tip';
    import api from '../../../api/api';
    export default class profile extends wepy.page{
        config = {
            navigationBarTitleText: '完善信息'
        }
        data = {
            date: '',
            tel: '',
            userData: {},
            html: '获取验证码',
            wait: 0,
            timer: null,
            sess_key: '',
            code: '123456'
        }
        // 获取个人资料
        async getuserInfo(sess_key) {
            let that = this;
            tip.loading();
                let res = await api.userInfo({method:'POST', query:{
                        sess_key:sess_key
                    }})
                if(res.data.error_code == '0'){
                    that.userData = res.data.bizobj.data;
                    this.date = this.userData.birthday;
                    that.$apply()
                    tip.loaded()
                }else{
                    tip.error(res.data.message)
                }
        }
        // 短信验证码
        async getCode(){
            if(this.wait > 0){
                return
            }
            let myreg = /^[1][3,4,5,7,8][0-9]{9}$/; //手机号正则
            if (this.tel == null || this.tel == ""||!myreg.test(this.tel)) {
                tip.error('手机号格式有误')
                return;
            }
            let that = this;
            let res = await api.sendProfileSms({method:'POST',query:{
                    sess_key:that.sess_key,
                    mobile: that.tel
                }})
            if(res.data.error_code == '0'){
                tip.success('验证码发送成功，请注意查收');
                this.wait = 60;
                clearTimeout(this.timer);
                this.downTime(
                this.wait,
                this.timer
                );
            }else{
                tip.error('验证码发送失败');
            }
        }
        async downTime(wait, timer) {
                //验证码倒计时
                let _this = this;
                if (wait == 0) {
                    _this.html = '获取验证码';
                    this.$apply();
                    wait = 60;
                } else {
                    _this.html = "重新发送"+"(" + wait + ")";
                    this.$apply();
                    wait--;
                    timer = setTimeout(function() {
                        _this.downTime(wait, timer);
                    }, 1000);
                }
            }
        // 更新个人资料
        async postuserInfo(data) {
            let that = this;
            tip.loading();
                let res = await api.updateUserInfo({method:'POST',query:data})
                if(res.data.error_code == '0'){
                    that.getuserInfo(that.sess_key);
                }else{
                    tip.error(res.data.msg);
                }
        }
        onLoad(){
            var _this = this;
            wx.getStorage({
                key: 'sess_key',
                success: function(res){
                    _this.getuserInfo(res.data);
                    _this.sess_key = res.data;
                }
            });
        }
        methods = {
            formSubmit: function(e) {
                let json = e.detail.value;
                json['id'] = this.userData.id;
                json['sess_key'] = this.sess_key;
                json['birthday'] = this.date;
                this.postuserInfo(json)
            },
            bindDateChange: function(e) {
                this.date = e.detail.value
            },
            getTel(e){
                this.tel = e.detail.value
            }
            
        }

    }
</script>
