<style scoped lang="less" rel="stylesheet/less">
    @import "../../styles/common.less";
    .m-skillDetails{
        .m-skill-info{
            padding: 30rpx;
            background-color: #fff;
            border-top: 1px solid #E6E6E6;
            .m-tr{
                line-height: 65rpx;
                font-size: 28rpx;
                color: #5A647A;
                &.m-title{
                    font-size: 32rpx;
                }
                &.m-tr-two{
                    .flex-row(space-between);
                    font-size: 24rpx;
                    color: #868E9E;
                }
            }
        }
        .m-back{
            height: 20rpx;
            background-color: #f9f9f9;
            width: 100%;
        }
        .m-skill-detail{
            padding: 20rpx 30rpx;
            /*margin-bottom: 110rpx;*/
            .m-title{
                padding-left: 30rpx;
                border-left: 5px solid #6698FF;
                font-size: 32rpx;
            }
            .m-info{
                padding: 20rpx 5rpx;
                font-size: 28rpx;
                color: #5A647A;
                line-height: 52rpx;
            }
        }
        .foot{
            position: fixed;
            bottom: 0;
            left: 0;
            padding: 20rpx 30rpx;
            border-top: 1px solid #E6E6E6;
            background-color: #fff;
            .m-btn{
                width: 690rpx;
                height: 80rpx;
                line-height: 80rpx;
                font-size: 28rpx;
                background-color: #4C80F5;
                color: #fff;
                text-align: center;
                &.m-active{
                    background-color: #CDD7EC ;
                }
            }
        }
    }
</style>
<template>
    <view class="m-skillDetails">
        <view class="m-skill-info">
            <view class="m-tr m-title">{{all_data.name}}</view>
            <view class="m-tr">培训时间：{{all_data.train_time}}</view>
            <view class="m-tr">培训地点：{{all_data.address}}</view>
            <view class="m-tr m-tr-two">
                <p class="m-left">更新时间：{{all_data.update_at}}</p>
                <p class="m-right">已报名：{{all_data.num}}人</p>
            </view>
        </view>
        <view class="m-back"></view>
        <view class="m-skill-detail">
            <p class="m-title">培训详情</p>

            <view class="m-info">
                <htmlParser :parserName="name1" :parserContent.sync="content1"/>
                <template is="wxParse" data="{{wxParseData:htmlParserName.nodes}}"></template>
            </view>

        </view>
        <view class="foot">
            <view class="m-btn {{all_data.has_apply? 'm-active':''}}" @tap="applyTrain">立即报名</view>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy';
    import tip from '../../utils/tip';
    import api from '../../api/api';
    import htmlParser from '../../components/common/htmlParser';
    import WxParse from '../../wxParse/wxParse.js';
    export default class SkillDetails extends wepy.page{
        config = {
            navigationBarTitleText: '培训详情',
            navigationBarBackgroundColor: '#fff',
            navigationBarTextStyle: 'black',
//            backgroundTextStyle:"dark"
        }
        data = {
            all_data:{
                has_apply:0
            },
            name1: "myHtmlParserKiner1",
            content1: "<text style='color: red;'>新1</text>"
        }
        components = {
            htmlParser: htmlParser
        };
        async getSkillDetails(sess_key,id) {
            let that = this;
            tip.loading();
            let res = await api.trainDetail({method:'POST',query:{
                sess_key: sess_key,
                id:id
            }});
            if(res.data.error_code == 0 ){
                that.all_data = res.data.bizobj.data;
                WxParse.wxParse('htmlParserName' , "html", res.data.bizobj.data.content, this,0);
                that.$apply();
                tip.loaded();
            }else{
                tip.error(res.data.error_msg);
            }
        }
        async applyTrain(sess_key,id) {
            let that = this;
            tip.loading();
            let res = await api.applyTrain({method:'POST',query:{
                    sess_key: sess_key,
                    id:id
                }});
            if(res.data.error_code == 0 ){
                that.all_data.has_apply = 1;
                that.$apply();
                tip.loaded();
            }else{
                tip.error(res.data.error_msg);
            }
        }
        onLoad(options){
            WxParse.wxParse('htmlParserName' , "html", "<p style='font-size: 32rpx; padding: 30rpx 0; text-align: center;'>没有任何内容</p>", this,0);
            this.getSkillDetails(options.sess_key,options.id);
        }
        methods = {
            applyTrain(){
                var that = this;
                wx.getStorage({
                    key: 'sess_key',
                    success: function(res){
                        that.applyTrain(res.data,that.all_data.id);
                    }
                });

            }
        }

    }
</script>
